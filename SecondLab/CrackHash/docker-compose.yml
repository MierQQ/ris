version: "3.9"
services:

  worker:
    build:
      context: ./Worker
      dockerfile: ./Dockerfile
    deploy:
      replicas: 4
    depends_on:
    - 'rabbitmq'
    
  manager:
    container_name: manager
    build:
      context: ./Manager
      dockerfile: ./Dockerfile
      args:
        NUM: 100
    ports:
    - "8080:8080"
    depends_on:
    - 'rabbitmq'

  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
    - RABBITMQ_DEFAULT_USER=guest
    - RABBITMQ_DEFAULT_PASS=guest
    volumes:
    - ./RabbitMQ/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    - ./RabbitMQ/rabbit_87513aa50539_2023-5-12.json:/etc/rabbitmq/definitions.json:ro
    ports:
    # AMQP protocol port
    - '5672:5672'
    # HTTP management UI
    - '15672:15672'

  mongodb1:
    image: mongo:4
    restart: always
    container_name: mongodb1
#    volumes:
#    - mongodata1:/data/db
    expose:
    - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1", "--quiet", "--logpath", "/dev/null"]

  mongodb2:
    image: mongo:4
    restart: always
    container_name: mongodb2
#    volumes:
#    - mongodata2:/data/db
    expose:
    - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1", "--quiet", "--logpath", "/dev/null"]
      
  mongodb3:
    image: mongo:4
    restart: always
    container_name: mongodb3
#    volumes:
#    - mongodata3:/data/db
    expose:
    - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1", "--quiet", "--logpath", "/dev/null"]
    
  mongosetup:
    image: "mongo-setup"
    build: "./mongo-setup"
    container_name: "mongosetup"
    depends_on:
    - mongodb1
    - mongodb2
    - mongodb3
#    volumes:
#    - mongostatus:/data/
  

volumes:
    mongodata1:
    mongodata2:
    mongodata3:
    mongostatus: